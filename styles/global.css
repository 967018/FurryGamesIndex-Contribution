@import url(modules/base.css);
@import url(modules/icons.css);
@import url(modules/controls.css);
@import url(modules/typography.css);

/* 重置 */

a {
    color: inherit;
    text-decoration: none;
}

address {
    font-style: inherit;
}

body {
    margin: 0;
}

button {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 0;
    font-family: inherit;
    font-size: inherit;
    text-decoration: none;
    color: inherit;
    white-space: nowrap;
    border: none;
    background-color: transparent;
    box-sizing: border-box;
    cursor: pointer;
    overflow: hidden;
}

figure {
    margin: 0;
}

h1,
h2,
h3,
h4 {
    margin: 0;
}

hr {
    margin: 0;
    grid-column: 1 / -1;
}

p {
    margin: 0;
    line-height: 1.5;
    margin-block-end: 1.5em;
}

ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

/* 全局设置 */

:root {
    --global-grid-columns: 3;
}

.expander .item {
    background-color: var(--card-background-default);
}

.expander .item :is(a, button) {
    transition-property: background-color;
    transition-duration: var(--timing-fastest);
    transition-timing-function: var(--bare-minimum-ease);
}

.expander .item :is(a, button):hover {
    background-color: var(--subtle-fill-secondary);
}

.expander .item :is(a, button):active {
    background-color: var(--subtle-fill-tertiary);
}

html {
    line-height: 1;
}

body {
    display: grid;
    grid-template-columns: repeat(var(--global-grid-columns), 360px);
    column-gap: 40px;
    justify-content: center;
    padding-block: 48px;
    color: var(--text-primary);
    background-color: var(--global-background-base-color);
    background: var(--global-background-gradient-color);
    text-align: justify;
    -webkit-tap-highlight-color: transparent;
}

h1,
h2,
h3 {
    grid-column: 1 / -1;
    column-span: all;
    text-align: start;
}

h2,
h3 {
    margin-block-end: 1em;
}

header {
    grid-column: 1 / -1;
    display: grid;
    grid-template-columns: repeat(var(--global-grid-columns), 1fr);
    column-gap: 40px;
    margin-block-end: 8px;
}

header article {
    margin-block-end: 40px;
}

header article:first-of-type {
    grid-column-start: 1;
}

img {
    user-select: none;
}

nav {
    grid-column: 1 / -1;
    margin-block-end: 48px;
    white-space: nowrap;
    user-select: none;
}

nav ul {
    display: grid;
    grid-template-columns: auto;
    grid-auto-flow: column;
    grid-auto-columns: min-content;
    column-gap: 40px;
}

nav li {
    position: relative;
    display: flex;
    align-items: center;
}

nav ul > li[class~="activated"]:not(#language) {
    justify-content: center;
}

nav ul > li[class~="activated"]:not(#language)::after {
    content: "";
    inset-block-end: calc(-7em / 9);
    position: absolute;
    inline-size: 16px;
    block-size: 3px;
    border-radius: 1.5px;
    background-color: var(--orange-500);
    box-sizing: border-box;
}

nav ul > li > :is(a, button) {
    display: flex;
    column-gap: calc(2em / 3);
    align-items: center;
    transition-property: color;
    transition-duration: calc(250ms / 3);
    transition-timing-function: ease;
}

fds-icon[size="24"] {
    inline-size: 1.5rem;
}

fds-icon[size="20"] {
    inline-size: 1.25rem;
}

fds-icon[size="16"] {
    inline-size: 1rem;
}

nav ul > li > :is(a, button):hover {
    color: var(--text-secondary);
}

nav ul > li > :is(a, button):active {
    color: var(--text-tertiary);
}

#language {
    justify-content: end;
}

#language > button {
    overflow: visible;
}

#language > button::before {
    content: "";
    z-index: -1;
    inset: -8px -12px;
    position: absolute;
    border-radius: 4px;
}

#language[class~="activated"] > button::before {
    background-color: var(--subtle-fill-secondary);
}

#language[class~="activated"] > button:active::before {
    background-color: var(--subtle-fill-tertiary);
}

#language menu {
    z-index: 32;
    inset-block-start: 24px;
    inset-inline-end: -12px;
    inline-size: 160px;
    padding-block: 2px;
    margin-block: 16px;
    align-self: start;
    opacity: 0;
    pointer-events: none;
}

#language menu {
    transition-property: opacity;
    transition-duration: var(--timing-fastest);
    transition-timing-function: var(--bare-minimum-ease);
}

#language[class~="activated"] menu {
    pointer-events: unset;
    opacity: 1;
}

.headings {
    grid-column: 1 / -1;
    display: grid;
    grid-template-columns: max-content max-content auto;
    align-items: center;
}

.headings h1 {
    font-weight: 600;
    grid-column: unset;
}

header .button {
    justify-self: end;
}

header > p {
    grid-column: 1 / -1;
    grid-column-end: span min(var(--global-grid-columns), 2);
    font-weight: 400;
    margin-block: 1.5em;
}

main {
    grid-column: 1 / -1;
}

section {
    margin-block: 48px;
    scroll-margin-block-start: 40px;
}

article {
    scroll-margin-block-start: 2rem;
}

main :is(ul, ol) {
    line-height: 1.5em;
}

dialog {
    z-index: 128;
}

@media (max-width: 1359px) {
    :root {
        --global-grid-columns: 2;
    }
    nav ul {
        column-gap: 32px;
    }
}

@media (min-width: 840px) {
    nav ul {
        font-size: 1.125rem;
    }
    nav ul > li[class~="activated"]:not(#language)::after {
        margin-inline-start: calc(16em / 9);
    }
    .headings h1 {
        font-size: 2.5rem;
    }
}

@media (max-width: 839px) {
    :root {
        --global-grid-columns: 1;
    }
    body {
        padding-block: 24px;
    }
    nav {
        margin-block-end: 32px;
    }
    nav ul {
        column-gap: 24px;
    }
    nav li:not(:first-of-type) :is(a, button) span {
        display: none;
    }
    .headings {
        grid-template-columns: auto min-content;
    }
    .headings h1:first-of-type {
        font-size: 1.25rem;
    }
    .headings .button {
        grid-column-start: 2;
        grid-row: 1;
    }
    :lang(en) .headings h1:last-of-type {
        grid-column: 1 / -1;
    }
}

@media (prefers-color-scheme: light) {
    :root {
        --primary-color: var(--blue-700);
        --global-background-base-color: white;
        --global-background-gradient-color: linear-gradient(rgb(211 249 255 / 10%) 0%, rgb(211 249 255 / 0%) 100vh);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --primary-color: var(--blue-500);
        --global-background-base-color: var(--grey-950);
        --global-background-gradient-color: linear-gradient(rgb(0 120 212 / 20%) 0%, rgb(0 120 212 / 0%) 100vh);
    }
}
